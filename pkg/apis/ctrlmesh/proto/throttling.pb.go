// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: pkg/apis/ctrlmesh/proto/throttling.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BreakerState int32

const (
	BreakerState_OPENED BreakerState = 0
	BreakerState_CLOSED BreakerState = 1
)

// Enum value maps for BreakerState.
var (
	BreakerState_name = map[int32]string{
		0: "OPENED",
		1: "CLOSED",
	}
	BreakerState_value = map[string]int32{
		"OPENED": 0,
		"CLOSED": 1,
	}
)

func (x BreakerState) Enum() *BreakerState {
	p := new(BreakerState)
	*p = x
	return p
}

func (x BreakerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BreakerState) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[0].Descriptor()
}

func (BreakerState) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[0]
}

func (x BreakerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BreakerState.Descriptor instead.
func (BreakerState) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{0}
}

type CircuitBreaker_Option int32

const (
	CircuitBreaker_CREATE  CircuitBreaker_Option = 0
	CircuitBreaker_DELETE  CircuitBreaker_Option = 1
	CircuitBreaker_UPDATE  CircuitBreaker_Option = 2
	CircuitBreaker_CHECK   CircuitBreaker_Option = 3
	CircuitBreaker_RECOVER CircuitBreaker_Option = 4
)

// Enum value maps for CircuitBreaker_Option.
var (
	CircuitBreaker_Option_name = map[int32]string{
		0: "CREATE",
		1: "DELETE",
		2: "UPDATE",
		3: "CHECK",
		4: "RECOVER",
	}
	CircuitBreaker_Option_value = map[string]int32{
		"CREATE":  0,
		"DELETE":  1,
		"UPDATE":  2,
		"CHECK":   3,
		"RECOVER": 4,
	}
)

func (x CircuitBreaker_Option) Enum() *CircuitBreaker_Option {
	p := new(CircuitBreaker_Option)
	*p = x
	return p
}

func (x CircuitBreaker_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CircuitBreaker_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[1].Descriptor()
}

func (CircuitBreaker_Option) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[1]
}

func (x CircuitBreaker_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CircuitBreaker_Option.Descriptor instead.
func (CircuitBreaker_Option) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{0, 0}
}

type TrafficInterceptRule_ContentType int32

const (
	TrafficInterceptRule_NORMAL TrafficInterceptRule_ContentType = 0
	TrafficInterceptRule_REGEXP TrafficInterceptRule_ContentType = 1
)

// Enum value maps for TrafficInterceptRule_ContentType.
var (
	TrafficInterceptRule_ContentType_name = map[int32]string{
		0: "NORMAL",
		1: "REGEXP",
	}
	TrafficInterceptRule_ContentType_value = map[string]int32{
		"NORMAL": 0,
		"REGEXP": 1,
	}
)

func (x TrafficInterceptRule_ContentType) Enum() *TrafficInterceptRule_ContentType {
	p := new(TrafficInterceptRule_ContentType)
	*p = x
	return p
}

func (x TrafficInterceptRule_ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrafficInterceptRule_ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[2].Descriptor()
}

func (TrafficInterceptRule_ContentType) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[2]
}

func (x TrafficInterceptRule_ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrafficInterceptRule_ContentType.Descriptor instead.
func (TrafficInterceptRule_ContentType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{3, 0}
}

type TrafficInterceptRule_InterceptType int32

const (
	TrafficInterceptRule_INTERCEPT_WHITELIST TrafficInterceptRule_InterceptType = 0
	TrafficInterceptRule_INTERCEPT_BLACKLIST TrafficInterceptRule_InterceptType = 1
)

// Enum value maps for TrafficInterceptRule_InterceptType.
var (
	TrafficInterceptRule_InterceptType_name = map[int32]string{
		0: "INTERCEPT_WHITELIST",
		1: "INTERCEPT_BLACKLIST",
	}
	TrafficInterceptRule_InterceptType_value = map[string]int32{
		"INTERCEPT_WHITELIST": 0,
		"INTERCEPT_BLACKLIST": 1,
	}
)

func (x TrafficInterceptRule_InterceptType) Enum() *TrafficInterceptRule_InterceptType {
	p := new(TrafficInterceptRule_InterceptType)
	*p = x
	return p
}

func (x TrafficInterceptRule_InterceptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrafficInterceptRule_InterceptType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[3].Descriptor()
}

func (TrafficInterceptRule_InterceptType) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[3]
}

func (x TrafficInterceptRule_InterceptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrafficInterceptRule_InterceptType.Descriptor instead.
func (TrafficInterceptRule_InterceptType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{3, 1}
}

type RateLimiting_TriggerPolicy int32

const (
	RateLimiting_TRIGGER_POLICY_NORMAL       RateLimiting_TriggerPolicy = 0
	RateLimiting_TRIGGER_POLICY_LIMITER_ONLY RateLimiting_TriggerPolicy = 1
	RateLimiting_TRIGGER_POLICY_FORCE_OPENED RateLimiting_TriggerPolicy = 2
	RateLimiting_TRIGGER_POLICY_FORCE_CLOSED RateLimiting_TriggerPolicy = 3
)

// Enum value maps for RateLimiting_TriggerPolicy.
var (
	RateLimiting_TriggerPolicy_name = map[int32]string{
		0: "TRIGGER_POLICY_NORMAL",
		1: "TRIGGER_POLICY_LIMITER_ONLY",
		2: "TRIGGER_POLICY_FORCE_OPENED",
		3: "TRIGGER_POLICY_FORCE_CLOSED",
	}
	RateLimiting_TriggerPolicy_value = map[string]int32{
		"TRIGGER_POLICY_NORMAL":       0,
		"TRIGGER_POLICY_LIMITER_ONLY": 1,
		"TRIGGER_POLICY_FORCE_OPENED": 2,
		"TRIGGER_POLICY_FORCE_CLOSED": 3,
	}
)

func (x RateLimiting_TriggerPolicy) Enum() *RateLimiting_TriggerPolicy {
	p := new(RateLimiting_TriggerPolicy)
	*p = x
	return p
}

func (x RateLimiting_TriggerPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimiting_TriggerPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[4].Descriptor()
}

func (RateLimiting_TriggerPolicy) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[4]
}

func (x RateLimiting_TriggerPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimiting_TriggerPolicy.Descriptor instead.
func (RateLimiting_TriggerPolicy) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{4, 0}
}

type RateLimiting_RecoverType int32

const (
	RateLimiting_RECOVER_POLICY_MANUAL          RateLimiting_RecoverType = 0
	RateLimiting_RECOVER_POLICY_SLEEPING_WINDOW RateLimiting_RecoverType = 1
)

// Enum value maps for RateLimiting_RecoverType.
var (
	RateLimiting_RecoverType_name = map[int32]string{
		0: "RECOVER_POLICY_MANUAL",
		1: "RECOVER_POLICY_SLEEPING_WINDOW",
	}
	RateLimiting_RecoverType_value = map[string]int32{
		"RECOVER_POLICY_MANUAL":          0,
		"RECOVER_POLICY_SLEEPING_WINDOW": 1,
	}
)

func (x RateLimiting_RecoverType) Enum() *RateLimiting_RecoverType {
	p := new(RateLimiting_RecoverType)
	*p = x
	return p
}

func (x RateLimiting_RecoverType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateLimiting_RecoverType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[5].Descriptor()
}

func (RateLimiting_RecoverType) Type() protoreflect.EnumType {
	return &file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes[5]
}

func (x RateLimiting_RecoverType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateLimiting_RecoverType.Descriptor instead.
func (RateLimiting_RecoverType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{4, 1}
}

type CircuitBreaker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Option                CircuitBreaker_Option   `protobuf:"varint,1,opt,name=option,proto3,enum=proto.CircuitBreaker_Option" json:"option,omitempty"`
	TrafficInterceptRules []*TrafficInterceptRule `protobuf:"bytes,2,rep,name=trafficInterceptRules,proto3" json:"trafficInterceptRules,omitempty"`
	RateLimitings         []*RateLimiting         `protobuf:"bytes,3,rep,name=rateLimitings,proto3" json:"rateLimitings,omitempty"`
	ConfigHash            string                  `protobuf:"bytes,4,opt,name=configHash,proto3" json:"configHash,omitempty"`
	Name                  string                  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CircuitBreaker) Reset() {
	*x = CircuitBreaker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CircuitBreaker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CircuitBreaker) ProtoMessage() {}

func (x *CircuitBreaker) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CircuitBreaker.ProtoReflect.Descriptor instead.
func (*CircuitBreaker) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{0}
}

func (x *CircuitBreaker) GetOption() CircuitBreaker_Option {
	if x != nil {
		return x.Option
	}
	return CircuitBreaker_CREATE
}

func (x *CircuitBreaker) GetTrafficInterceptRules() []*TrafficInterceptRule {
	if x != nil {
		return x.TrafficInterceptRules
	}
	return nil
}

func (x *CircuitBreaker) GetRateLimitings() []*RateLimiting {
	if x != nil {
		return x.RateLimitings
	}
	return nil
}

func (x *CircuitBreaker) GetConfigHash() string {
	if x != nil {
		return x.ConfigHash
	}
	return ""
}

func (x *CircuitBreaker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LimitingSnapshot []*LimitingSnapshot `protobuf:"bytes,3,rep,name=limitingSnapshot,proto3" json:"limitingSnapshot,omitempty"`
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfigResp) GetLimitingSnapshot() []*LimitingSnapshot {
	if x != nil {
		return x.LimitingSnapshot
	}
	return nil
}

type LimitingSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitingName       string       `protobuf:"bytes,1,opt,name=limitingName,proto3" json:"limitingName,omitempty"`
	State              BreakerState `protobuf:"varint,2,opt,name=state,proto3,enum=proto.BreakerState" json:"state,omitempty"`
	RecoverTime        *v1.Time     `protobuf:"bytes,3,opt,name=recoverTime,proto3" json:"recoverTime,omitempty"`
	LastTransitionTime *v1.Time     `protobuf:"bytes,4,opt,name=lastTransitionTime,proto3" json:"lastTransitionTime,omitempty"`
}

func (x *LimitingSnapshot) Reset() {
	*x = LimitingSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitingSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitingSnapshot) ProtoMessage() {}

func (x *LimitingSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitingSnapshot.ProtoReflect.Descriptor instead.
func (*LimitingSnapshot) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{2}
}

func (x *LimitingSnapshot) GetLimitingName() string {
	if x != nil {
		return x.LimitingName
	}
	return ""
}

func (x *LimitingSnapshot) GetState() BreakerState {
	if x != nil {
		return x.State
	}
	return BreakerState_OPENED
}

func (x *LimitingSnapshot) GetRecoverTime() *v1.Time {
	if x != nil {
		return x.RecoverTime
	}
	return nil
}

func (x *LimitingSnapshot) GetLastTransitionTime() *v1.Time {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

type TrafficInterceptRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterceptType TrafficInterceptRule_InterceptType `protobuf:"varint,2,opt,name=interceptType,proto3,enum=proto.TrafficInterceptRule_InterceptType" json:"interceptType,omitempty"`
	ContentType   TrafficInterceptRule_ContentType   `protobuf:"varint,3,opt,name=contentType,proto3,enum=proto.TrafficInterceptRule_ContentType" json:"contentType,omitempty"`
	Contents      []string                           `protobuf:"bytes,4,rep,name=contents,proto3" json:"contents,omitempty"`
	Methods       []string                           `protobuf:"bytes,5,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *TrafficInterceptRule) Reset() {
	*x = TrafficInterceptRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficInterceptRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficInterceptRule) ProtoMessage() {}

func (x *TrafficInterceptRule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficInterceptRule.ProtoReflect.Descriptor instead.
func (*TrafficInterceptRule) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficInterceptRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrafficInterceptRule) GetInterceptType() TrafficInterceptRule_InterceptType {
	if x != nil {
		return x.InterceptType
	}
	return TrafficInterceptRule_INTERCEPT_WHITELIST
}

func (x *TrafficInterceptRule) GetContentType() TrafficInterceptRule_ContentType {
	if x != nil {
		return x.ContentType
	}
	return TrafficInterceptRule_NORMAL
}

func (x *TrafficInterceptRule) GetContents() []string {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *TrafficInterceptRule) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

type RateLimiting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceRules  []*ResourceRule             `protobuf:"bytes,2,rep,name=resourceRules,proto3" json:"resourceRules,omitempty"`
	RestRules      []*RestRules                `protobuf:"bytes,3,rep,name=restRules,proto3" json:"restRules,omitempty"`
	Bucket         *Bucket                     `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	TriggerPolicy  RateLimiting_TriggerPolicy  `protobuf:"varint,5,opt,name=triggerPolicy,proto3,enum=proto.RateLimiting_TriggerPolicy" json:"triggerPolicy,omitempty"`
	RecoverPolicy  *RateLimiting_RecoverPolicy `protobuf:"bytes,6,opt,name=recoverPolicy,proto3" json:"recoverPolicy,omitempty"`
	ValidatePolicy string                      `protobuf:"bytes,7,opt,name=validatePolicy,proto3" json:"validatePolicy,omitempty"`
	Properties     map[string]string           `protobuf:"bytes,8,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RateLimiting) Reset() {
	*x = RateLimiting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimiting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiting) ProtoMessage() {}

func (x *RateLimiting) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiting.ProtoReflect.Descriptor instead.
func (*RateLimiting) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{4}
}

func (x *RateLimiting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RateLimiting) GetResourceRules() []*ResourceRule {
	if x != nil {
		return x.ResourceRules
	}
	return nil
}

func (x *RateLimiting) GetRestRules() []*RestRules {
	if x != nil {
		return x.RestRules
	}
	return nil
}

func (x *RateLimiting) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *RateLimiting) GetTriggerPolicy() RateLimiting_TriggerPolicy {
	if x != nil {
		return x.TriggerPolicy
	}
	return RateLimiting_TRIGGER_POLICY_NORMAL
}

func (x *RateLimiting) GetRecoverPolicy() *RateLimiting_RecoverPolicy {
	if x != nil {
		return x.RecoverPolicy
	}
	return nil
}

func (x *RateLimiting) GetValidatePolicy() string {
	if x != nil {
		return x.ValidatePolicy
	}
	return ""
}

func (x *RateLimiting) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ResourceRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiGroups  []string `protobuf:"bytes,1,rep,name=apiGroups,proto3" json:"apiGroups,omitempty"`
	Resources  []string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	Verbs      []string `protobuf:"bytes,3,rep,name=verbs,proto3" json:"verbs,omitempty"`
	Namespaces []string `protobuf:"bytes,4,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *ResourceRule) Reset() {
	*x = ResourceRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRule) ProtoMessage() {}

func (x *ResourceRule) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRule.ProtoReflect.Descriptor instead.
func (*ResourceRule) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceRule) GetApiGroups() []string {
	if x != nil {
		return x.ApiGroups
	}
	return nil
}

func (x *ResourceRule) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ResourceRule) GetVerbs() []string {
	if x != nil {
		return x.Verbs
	}
	return nil
}

func (x *ResourceRule) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type RestRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *RestRules) Reset() {
	*x = RestRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestRules) ProtoMessage() {}

func (x *RestRules) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestRules.ProtoReflect.Descriptor instead.
func (*RestRules) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{6}
}

func (x *RestRules) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RestRules) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Burst    uint32 `protobuf:"varint,1,opt,name=burst,proto3" json:"burst,omitempty"`
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Limit    uint32 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{7}
}

func (x *Bucket) GetBurst() uint32 {
	if x != nil {
		return x.Burst
	}
	return 0
}

func (x *Bucket) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *Bucket) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RateLimiting_RecoverPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               RateLimiting_RecoverType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.RateLimiting_RecoverType" json:"type,omitempty"`
	SleepingWindowSize string                   `protobuf:"bytes,2,opt,name=sleepingWindowSize,proto3" json:"sleepingWindowSize,omitempty"`
}

func (x *RateLimiting_RecoverPolicy) Reset() {
	*x = RateLimiting_RecoverPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateLimiting_RecoverPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiting_RecoverPolicy) ProtoMessage() {}

func (x *RateLimiting_RecoverPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiting_RecoverPolicy.ProtoReflect.Descriptor instead.
func (*RateLimiting_RecoverPolicy) Descriptor() ([]byte, []int) {
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP(), []int{4, 1}
}

func (x *RateLimiting_RecoverPolicy) GetType() RateLimiting_RecoverType {
	if x != nil {
		return x.Type
	}
	return RateLimiting_RECOVER_POLICY_MANUAL
}

func (x *RateLimiting_RecoverPolicy) GetSleepingWindowSize() string {
	if x != nil {
		return x.SleepingWindowSize
	}
	return ""
}

var File_pkg_apis_ctrlmesh_proto_throttling_proto protoreflect.FileDescriptor

var file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x74, 0x72, 0x6c, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x02, 0x0a, 0x0e, 0x43, 0x69, 0x72, 0x63,
	0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x51, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x15, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x0d, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x44, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x04, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x10,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x22, 0x8b, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe6,
	0x02, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0x25, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x47, 0x45,
	0x58, 0x50, 0x10, 0x01, 0x22, 0x41, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x63, 0x65, 0x70,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x43, 0x45,
	0x50, 0x54, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x22, 0xc6, 0x06, 0x0a, 0x0c, 0x52, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x47,
	0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x47, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x74, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x33, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x6c, 0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12,
	0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c,
	0x49, 0x43, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44,
	0x10, 0x03, 0x22, 0x4c, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c,
	0x49, 0x43, 0x59, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x53,
	0x4c, 0x45, 0x45, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x01,
	0x22, 0x80, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x65,
	0x72, 0x62, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x50, 0x0a, 0x06, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x2a, 0x26, 0x0a, 0x0c,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x01, 0x32, 0x44, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2d,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x74,
	0x72, 0x6c, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescOnce sync.Once
	file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescData = file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDesc
)

func file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescGZIP() []byte {
	file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescOnce.Do(func() {
		file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescData)
	})
	return file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDescData
}

var file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_apis_ctrlmesh_proto_throttling_proto_goTypes = []interface{}{
	(BreakerState)(0),                       // 0: proto.BreakerState
	(CircuitBreaker_Option)(0),              // 1: proto.CircuitBreaker.Option
	(TrafficInterceptRule_ContentType)(0),   // 2: proto.TrafficInterceptRule.ContentType
	(TrafficInterceptRule_InterceptType)(0), // 3: proto.TrafficInterceptRule.InterceptType
	(RateLimiting_TriggerPolicy)(0),         // 4: proto.RateLimiting.TriggerPolicy
	(RateLimiting_RecoverType)(0),           // 5: proto.RateLimiting.RecoverType
	(*CircuitBreaker)(nil),                  // 6: proto.CircuitBreaker
	(*ConfigResp)(nil),                      // 7: proto.ConfigResp
	(*LimitingSnapshot)(nil),                // 8: proto.LimitingSnapshot
	(*TrafficInterceptRule)(nil),            // 9: proto.TrafficInterceptRule
	(*RateLimiting)(nil),                    // 10: proto.RateLimiting
	(*ResourceRule)(nil),                    // 11: proto.ResourceRule
	(*RestRules)(nil),                       // 12: proto.RestRules
	(*Bucket)(nil),                          // 13: proto.Bucket
	nil,                                     // 14: proto.RateLimiting.PropertiesEntry
	(*RateLimiting_RecoverPolicy)(nil),      // 15: proto.RateLimiting.RecoverPolicy
	(*v1.Time)(nil),                         // 16: k8s.io.apimachinery.pkg.apis.meta.v1.Time
}
var file_pkg_apis_ctrlmesh_proto_throttling_proto_depIdxs = []int32{
	1,  // 0: proto.CircuitBreaker.option:type_name -> proto.CircuitBreaker.Option
	9,  // 1: proto.CircuitBreaker.trafficInterceptRules:type_name -> proto.TrafficInterceptRule
	10, // 2: proto.CircuitBreaker.rateLimitings:type_name -> proto.RateLimiting
	8,  // 3: proto.ConfigResp.limitingSnapshot:type_name -> proto.LimitingSnapshot
	0,  // 4: proto.LimitingSnapshot.state:type_name -> proto.BreakerState
	16, // 5: proto.LimitingSnapshot.recoverTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	16, // 6: proto.LimitingSnapshot.lastTransitionTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	3,  // 7: proto.TrafficInterceptRule.interceptType:type_name -> proto.TrafficInterceptRule.InterceptType
	2,  // 8: proto.TrafficInterceptRule.contentType:type_name -> proto.TrafficInterceptRule.ContentType
	11, // 9: proto.RateLimiting.resourceRules:type_name -> proto.ResourceRule
	12, // 10: proto.RateLimiting.restRules:type_name -> proto.RestRules
	13, // 11: proto.RateLimiting.bucket:type_name -> proto.Bucket
	4,  // 12: proto.RateLimiting.triggerPolicy:type_name -> proto.RateLimiting.TriggerPolicy
	15, // 13: proto.RateLimiting.recoverPolicy:type_name -> proto.RateLimiting.RecoverPolicy
	14, // 14: proto.RateLimiting.properties:type_name -> proto.RateLimiting.PropertiesEntry
	5,  // 15: proto.RateLimiting.RecoverPolicy.type:type_name -> proto.RateLimiting.RecoverType
	6,  // 16: proto.Throttling.SendConfig:input_type -> proto.CircuitBreaker
	7,  // 17: proto.Throttling.SendConfig:output_type -> proto.ConfigResp
	17, // [17:18] is the sub-list for method output_type
	16, // [16:17] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pkg_apis_ctrlmesh_proto_throttling_proto_init() }
func file_pkg_apis_ctrlmesh_proto_throttling_proto_init() {
	if File_pkg_apis_ctrlmesh_proto_throttling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CircuitBreaker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitingSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficInterceptRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimiting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateLimiting_RecoverPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_ctrlmesh_proto_throttling_proto_goTypes,
		DependencyIndexes: file_pkg_apis_ctrlmesh_proto_throttling_proto_depIdxs,
		EnumInfos:         file_pkg_apis_ctrlmesh_proto_throttling_proto_enumTypes,
		MessageInfos:      file_pkg_apis_ctrlmesh_proto_throttling_proto_msgTypes,
	}.Build()
	File_pkg_apis_ctrlmesh_proto_throttling_proto = out.File
	file_pkg_apis_ctrlmesh_proto_throttling_proto_rawDesc = nil
	file_pkg_apis_ctrlmesh_proto_throttling_proto_goTypes = nil
	file_pkg_apis_ctrlmesh_proto_throttling_proto_depIdxs = nil
}
